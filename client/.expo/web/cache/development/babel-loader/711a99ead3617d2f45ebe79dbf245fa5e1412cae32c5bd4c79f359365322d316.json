{"ast":null,"code":"var _jsxFileName = \"/Users/shivam/Desktop/mobile-chat-app/client/src/context/AuthContext.js\";\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { api } from '../api/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthCtx = createContext();\nexport const useAuth = () => useContext(AuthCtx);\nexport default function AuthProvider({\n  children\n}) {\n  const [token, setToken] = useState(null);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    (async () => {\n      const t = await AsyncStorage.getItem('token');\n      const u = await AsyncStorage.getItem('user');\n      if (t && u) {\n        setToken(t);\n        setUser(JSON.parse(u));\n      }\n      setLoading(false);\n    })();\n  }, []);\n  const login = async (email, password) => {\n    const {\n      token: tk,\n      user: u\n    } = await api('/auth/login', 'POST', {\n      email,\n      password\n    });\n    setToken(tk);\n    setUser(u);\n    await AsyncStorage.setItem('token', tk);\n    await AsyncStorage.setItem('user', JSON.stringify(u));\n  };\n  const register = async (name, email, password) => {\n    const {\n      token: tk,\n      user: u\n    } = await api('/auth/register', 'POST', {\n      name,\n      email,\n      password\n    });\n    setToken(tk);\n    setUser(u);\n    await AsyncStorage.setItem('token', tk);\n    await AsyncStorage.setItem('user', JSON.stringify(u));\n  };\n  const logout = async () => {\n    setToken(null);\n    setUser(null);\n    await AsyncStorage.removeItem('token');\n    await AsyncStorage.removeItem('user');\n  };\n  return _jsxDEV(AuthCtx.Provider, {\n    value: {\n      token,\n      user,\n      login,\n      register,\n      logout,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n}","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","AsyncStorage","api","jsxDEV","_jsxDEV","AuthCtx","useAuth","AuthProvider","children","token","setToken","user","setUser","loading","setLoading","t","getItem","u","JSON","parse","login","email","password","tk","setItem","stringify","register","name","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/shivam/Desktop/mobile-chat-app/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { api } from '../api/client';\n\nconst AuthCtx = createContext();\nexport const useAuth = () => useContext(AuthCtx);\n\nexport default function AuthProvider({ children }) {\n  const [token, setToken] = useState(null);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    (async () => {\n      const t = await AsyncStorage.getItem('token');\n      const u = await AsyncStorage.getItem('user');\n      if (t && u) { setToken(t); setUser(JSON.parse(u)); }\n      setLoading(false);\n    })();\n  }, []);\n\n  const login = async (email, password) => {\n    const { token: tk, user: u } = await api('/auth/login', 'POST', { email, password });\n    setToken(tk); setUser(u);\n    await AsyncStorage.setItem('token', tk);\n    await AsyncStorage.setItem('user', JSON.stringify(u));\n  };\n\n  const register = async (name, email, password) => {\n    const { token: tk, user: u } = await api('/auth/register', 'POST', { name, email, password });\n    setToken(tk); setUser(u);\n    await AsyncStorage.setItem('token', tk);\n    await AsyncStorage.setItem('user', JSON.stringify(u));\n  };\n\n  const logout = async () => {\n    setToken(null); setUser(null);\n    await AsyncStorage.removeItem('token');\n    await AsyncStorage.removeItem('user');\n  };\n\n  return <AuthCtx.Provider value={{ token, user, login, register, logout, loading }}>{children}</AuthCtx.Provider>;\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC7E,OAAOC,YAAY,MAAM,2CAA2C;AACpE,SAASC,GAAG,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,OAAO,GAAGR,aAAa,CAAC,CAAC;AAC/B,OAAO,MAAMS,OAAO,GAAGA,CAAA,KAAMR,UAAU,CAACO,OAAO,CAAC;AAEhD,eAAe,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EACjD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,CAAC,YAAY;MACX,MAAMgB,CAAC,GAAG,MAAMd,YAAY,CAACe,OAAO,CAAC,OAAO,CAAC;MAC7C,MAAMC,CAAC,GAAG,MAAMhB,YAAY,CAACe,OAAO,CAAC,MAAM,CAAC;MAC5C,IAAID,CAAC,IAAIE,CAAC,EAAE;QAAEP,QAAQ,CAACK,CAAC,CAAC;QAAEH,OAAO,CAACM,IAAI,CAACC,KAAK,CAACF,CAAC,CAAC,CAAC;MAAE;MACnDH,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,EAAE,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,MAAM;MAAEb,KAAK,EAAEc,EAAE;MAAEZ,IAAI,EAAEM;IAAE,CAAC,GAAG,MAAMf,GAAG,CAAC,aAAa,EAAE,MAAM,EAAE;MAAEmB,KAAK;MAAEC;IAAS,CAAC,CAAC;IACpFZ,QAAQ,CAACa,EAAE,CAAC;IAAEX,OAAO,CAACK,CAAC,CAAC;IACxB,MAAMhB,YAAY,CAACuB,OAAO,CAAC,OAAO,EAAED,EAAE,CAAC;IACvC,MAAMtB,YAAY,CAACuB,OAAO,CAAC,MAAM,EAAEN,IAAI,CAACO,SAAS,CAACR,CAAC,CAAC,CAAC;EACvD,CAAC;EAED,MAAMS,QAAQ,GAAG,MAAAA,CAAOC,IAAI,EAAEN,KAAK,EAAEC,QAAQ,KAAK;IAChD,MAAM;MAAEb,KAAK,EAAEc,EAAE;MAAEZ,IAAI,EAAEM;IAAE,CAAC,GAAG,MAAMf,GAAG,CAAC,gBAAgB,EAAE,MAAM,EAAE;MAAEyB,IAAI;MAAEN,KAAK;MAAEC;IAAS,CAAC,CAAC;IAC7FZ,QAAQ,CAACa,EAAE,CAAC;IAAEX,OAAO,CAACK,CAAC,CAAC;IACxB,MAAMhB,YAAY,CAACuB,OAAO,CAAC,OAAO,EAAED,EAAE,CAAC;IACvC,MAAMtB,YAAY,CAACuB,OAAO,CAAC,MAAM,EAAEN,IAAI,CAACO,SAAS,CAACR,CAAC,CAAC,CAAC;EACvD,CAAC;EAED,MAAMW,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzBlB,QAAQ,CAAC,IAAI,CAAC;IAAEE,OAAO,CAAC,IAAI,CAAC;IAC7B,MAAMX,YAAY,CAAC4B,UAAU,CAAC,OAAO,CAAC;IACtC,MAAM5B,YAAY,CAAC4B,UAAU,CAAC,MAAM,CAAC;EACvC,CAAC;EAED,OAAOzB,OAAA,CAACC,OAAO,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAEtB,KAAK;MAAEE,IAAI;MAAES,KAAK;MAAEM,QAAQ;MAAEE,MAAM;MAAEf;IAAQ,CAAE;IAAAL,QAAA,EAAEA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAmB,CAAC;AAClH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}