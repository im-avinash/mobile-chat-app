{"ast":null,"code":"var _jsxFileName = \"/Users/shivam/Desktop/mobile-chat-app/client/src/pages/Home.js\";\nimport React, { useEffect, useMemo, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { api } from '../api/client';\nimport { useAuth } from '../context/AuthContext';\nimport UserListItem from '../components/UserListItem';\nimport { getSocket, closeSocket } from '../services/socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomeScreen({\n  navigation\n}) {\n  const {\n    token,\n    user,\n    logout\n  } = useAuth();\n  const [users, setUsers] = useState([]);\n  const [online, setOnline] = useState({});\n  const [refreshing, setRefreshing] = useState(false);\n  const socket = useMemo(() => getSocket(token), [token]);\n  const load = async () => {\n    try {\n      const list = await api('/users', 'GET', undefined, token);\n      setUsers(list.sort((a, b) => new Date(b.lastMessageAt || 0) - new Date(a.lastMessageAt || 0)));\n    } catch (e) {\n      console.warn('Failed to load users', e.message);\n    }\n  };\n  useEffect(() => {\n    load();\n  }, []);\n  useEffect(() => {\n    const onPresence = ({\n      userId,\n      online: isOn\n    }) => setOnline(prev => Object.assign({}, prev, {\n      [userId]: isOn\n    }));\n    socket.on('presence:update', onPresence);\n    return () => {\n      socket.off('presence:update', onPresence);\n    };\n  }, [socket]);\n  useEffect(() => () => closeSocket(), []);\n  return _jsxDEV(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsxDEV(View, {\n      style: {\n        padding: 12,\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [_jsxDEV(Text, {\n        style: {\n          fontWeight: '700'\n        },\n        children: [\"Hi, \", user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        title: \"Logout\",\n        onPress: logout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), _jsxDEV(FlatList, {\n      data: users,\n      keyExtractor: item => String(item.id),\n      refreshControl: _jsxDEV(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: async () => {\n          setRefreshing(true);\n          await load();\n          setRefreshing(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }, this),\n      renderItem: ({\n        item\n      }) => _jsxDEV(UserListItem, {\n        user: item,\n        online: !!online[item.id],\n        onPress: () => navigation.navigate('Chat', {\n          peer: item\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","useEffect","useMemo","useState","View","FlatList","Text","Button","RefreshControl","api","useAuth","UserListItem","getSocket","closeSocket","jsxDEV","_jsxDEV","HomeScreen","navigation","token","user","logout","users","setUsers","online","setOnline","refreshing","setRefreshing","socket","load","list","undefined","sort","a","b","Date","lastMessageAt","e","console","warn","message","onPresence","userId","isOn","prev","Object","assign","on","off","style","flex","children","padding","flexDirection","justifyContent","alignItems","fontWeight","name","fileName","_jsxFileName","lineNumber","columnNumber","title","onPress","data","keyExtractor","item","String","id","refreshControl","onRefresh","renderItem","navigate","peer"],"sources":["/Users/shivam/Desktop/mobile-chat-app/client/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { View, FlatList, Text, Button, RefreshControl } from 'react-native';\nimport { api } from '../api/client';\nimport { useAuth } from '../context/AuthContext';\nimport UserListItem from '../components/UserListItem';\nimport { getSocket, closeSocket } from '../services/socket';\n\nexport default function HomeScreen({ navigation }) {\n  const { token, user, logout } = useAuth();\n  const [users, setUsers] = useState([]);\n  const [online, setOnline] = useState({});\n  const [refreshing, setRefreshing] = useState(false);\n\n  const socket = useMemo(() => getSocket(token), [token]);\n\n  const load = async () => {\n    try {\n      const list = await api('/users', 'GET', undefined, token);\n      setUsers(list.sort((a, b) => (new Date(b.lastMessageAt || 0)) - (new Date(a.lastMessageAt || 0))));\n    } catch (e) {\n      console.warn('Failed to load users', e.message);\n    }\n  };\n\n  useEffect(() => { load(); }, []);\n\n  useEffect(() => {\n    const onPresence = ({ userId, online: isOn }) => setOnline(prev => ({ ...prev, [userId]: isOn }));\n    socket.on('presence:update', onPresence);\n    return () => { socket.off('presence:update', onPresence); };\n  }, [socket]);\n\n  useEffect(() => () => closeSocket(), []);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <View style={{ padding: 12, flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}>\n        <Text style={{ fontWeight: '700' }}>Hi, {user.name}</Text>\n        <Button title=\"Logout\" onPress={logout} />\n      </View>\n      <FlatList\n        data={users}\n        keyExtractor={item => String(item.id)}\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={async () => { setRefreshing(true); await load(); setRefreshing(false); }} />}\n        renderItem={({ item }) => (\n          <UserListItem user={item} online={!!online[item.id]} onPress={() => navigation.navigate('Chat', { peer: item })} />\n        )}\n      />\n    </View>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}