{"ast":null,"code":"var _jsxFileName = \"/Users/shivam/Desktop/mobile-chat-app/client/src/pages/Chat.js\";\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { api } from '../api/client';\nimport { useAuth } from '../context/AuthContext';\nimport { getSocket } from '../services/socket';\nimport MessageBubble from '../components/MessageBubble';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatScreen({\n  route\n}) {\n  const {\n    peer\n  } = route.params;\n  const {\n    token,\n    user\n  } = useAuth();\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState('');\n  const [peerTyping, setPeerTyping] = useState(false);\n  const listRef = useRef(null);\n  const socket = useMemo(() => getSocket(token), [token]);\n  useEffect(() => {\n    let mounted = true;\n    (async () => {\n      try {\n        const msgs = await api(`/conversations/${peer.id}/messages`, 'GET', undefined, token);\n        if (!mounted) return;\n        const norm = msgs.map(m => ({\n          id: m.id || m._id,\n          from: m.from,\n          to: m.to,\n          text: m.text,\n          createdAt: m.createdAt || m.created_at || m.created,\n          deliveredAt: m.deliveredAt,\n          readAt: m.readAt\n        }));\n        setMessages(norm);\n        const unreadIds = norm.filter(m => String(m.to) === String(user.id) && !m.readAt).map(m => m.id);\n        if (unreadIds.length) {\n          socket.emit('message:read', {\n            messageIds: unreadIds,\n            peerId: peer.id\n          });\n        }\n      } catch (e) {\n        console.warn('Load messages failed', e.message || e);\n      }\n    })();\n    return () => {\n      mounted = false;\n    };\n  }, [peer.id, token]);\n  useEffect(() => {\n    if (!socket) return;\n    const onNew = msg => {\n      const m = {\n        id: msg.id || msg._id,\n        from: msg.from,\n        to: msg.to,\n        text: msg.text,\n        createdAt: msg.createdAt || msg.createdAt,\n        deliveredAt: msg.deliveredAt,\n        readAt: msg.readAt\n      };\n      if (String(m.from) === String(peer.id) || String(m.to) === String(peer.id)) {\n        setMessages(prev => [...prev, m]);\n        if (String(m.to) === String(user.id)) {\n          socket.emit('message:read', {\n            messageIds: [m.id],\n            peerId: peer.id\n          });\n        }\n      }\n    };\n    const onRead = ({\n      messageIds,\n      peerId\n    }) => {\n      if (String(peerId) !== String(peer.id) && String(peerId) !== String(user.id)) {}\n      setMessages(prev => prev.map(m => messageIds.includes(m.id) ? Object.assign({}, m, {\n        readAt: new Date().toISOString()\n      }) : m));\n    };\n    const onTypingStart = ({\n      from\n    }) => {\n      if (String(from) === String(peer.id)) setPeerTyping(true);\n    };\n    const onTypingStop = ({\n      from\n    }) => {\n      if (String(from) === String(peer.id)) setPeerTyping(false);\n    };\n    socket.on('message:new', onNew);\n    socket.on('message:read', onRead);\n    socket.on('typing:start', onTypingStart);\n    socket.on('typing:stop', onTypingStop);\n    return () => {\n      socket.off('message:new', onNew);\n      socket.off('message:read', onRead);\n      socket.off('typing:start', onTypingStart);\n      socket.off('typing:stop', onTypingStop);\n    };\n  }, [socket, peer.id]);\n  useEffect(() => {\n    const t = setTimeout(() => listRef.current?.scrollToEnd({\n      animated: true\n    }), 80);\n    return () => clearTimeout(t);\n  }, [messages.length]);\n  useEffect(() => {\n    if (!socket) return;\n    if (text.length > 0) {\n      socket.emit('typing:start', {\n        to: peer.id\n      });\n      const t = setTimeout(() => socket.emit('typing:stop', {\n        to: peer.id\n      }), 1200);\n      return () => clearTimeout(t);\n    } else {\n      socket.emit('typing:stop', {\n        to: peer.id\n      });\n    }\n  }, [text]);\n  const send = () => {\n    if (!text.trim()) return;\n    const payload = {\n      to: peer.id,\n      text: text.trim(),\n      clientId: Date.now().toString()\n    };\n    socket.emit('message:send', payload);\n    const optimistic = {\n      id: `local-${Date.now()}`,\n      from: user.id,\n      to: peer.id,\n      text: text.trim(),\n      createdAt: new Date().toISOString(),\n      deliveredAt: null,\n      readAt: null\n    };\n    setMessages(prev => [...prev, optimistic]);\n    setText('');\n  };\n  return _jsxDEV(KeyboardAvoidingView, {\n    style: {\n      flex: 1\n    },\n    behavior: Platform.OS === 'ios' ? 'padding' : undefined,\n    children: [_jsxDEV(View, {\n      style: styles.header,\n      children: [_jsxDEV(Text, {\n        style: styles.headerText,\n        children: peer.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), peerTyping ? _jsxDEV(Text, {\n        style: styles.typing,\n        children: \"typing\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 23\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), _jsxDEV(FlatList, {\n      ref: listRef,\n      data: messages,\n      keyExtractor: item => String(item.id),\n      renderItem: ({\n        item\n      }) => _jsxDEV(MessageBubble, {\n        msg: item,\n        me: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 35\n      }, this),\n      contentContainerStyle: {\n        padding: 12\n      },\n      onContentSizeChange: () => listRef.current?.scrollToEnd({\n        animated: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.inputRow,\n      children: [_jsxDEV(TextInput, {\n        placeholder: \"Type a message\",\n        value: text,\n        onChangeText: setText,\n        style: styles.input,\n        multiline: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        title: \"Send\",\n        onPress: send\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  header: {\n    padding: 12,\n    borderBottomWidth: 1,\n    borderColor: '#eee',\n    alignItems: 'center'\n  },\n  headerText: {\n    fontWeight: '700',\n    fontSize: 16\n  },\n  typing: {\n    fontSize: 12,\n    color: '#666',\n    marginTop: 4\n  },\n  inputRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n    borderTopWidth: 1,\n    borderColor: '#eee'\n  },\n  input: {\n    flex: 1,\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 20,\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    marginRight: 8\n  }\n});","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","View","FlatList","TextInput","Button","KeyboardAvoidingView","Platform","Text","StyleSheet","api","useAuth","getSocket","MessageBubble","jsxDEV","_jsxDEV","ChatScreen","route","peer","params","token","user","messages","setMessages","text","setText","peerTyping","setPeerTyping","listRef","socket","mounted","msgs","id","undefined","norm","map","m","_id","from","to","createdAt","created_at","created","deliveredAt","readAt","unreadIds","filter","String","length","emit","messageIds","peerId","e","console","warn","message","onNew","msg","prev","onRead","includes","Object","assign","Date","toISOString","onTypingStart","onTypingStop","on","off","t","setTimeout","current","scrollToEnd","animated","clearTimeout","send","trim","payload","clientId","now","toString","optimistic","style","flex","behavior","OS","children","styles","header","headerText","name","fileName","_jsxFileName","lineNumber","columnNumber","typing","ref","data","keyExtractor","item","renderItem","me","contentContainerStyle","padding","onContentSizeChange","inputRow","placeholder","value","onChangeText","input","multiline","title","onPress","create","borderBottomWidth","borderColor","alignItems","fontWeight","fontSize","color","marginTop","flexDirection","borderTopWidth","borderWidth","borderRadius","paddingHorizontal","paddingVertical","marginRight"],"sources":["/Users/shivam/Desktop/mobile-chat-app/client/src/pages/Chat.js"],"sourcesContent":["// mobile/src/screens/ChatScreen.js\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { View, FlatList, TextInput, Button, KeyboardAvoidingView, Platform, Text, StyleSheet } from 'react-native';\nimport { api } from '../api/client';            // your fetch wrapper: api(path, method, body, token)\nimport { useAuth } from '../context/AuthContext';\nimport { getSocket } from '../services/socket'; // returns socket instance (creates if necessary)\nimport MessageBubble from '../components/MessageBubble';\n\nexport default function ChatScreen({ route }) {\n  const { peer } = route.params; // peer = { id, name, ... }\n  const { token, user } = useAuth();\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState('');\n  const [peerTyping, setPeerTyping] = useState(false);\n  const listRef = useRef(null);\n\n  // create/get socket. If your getSocket requires a token param, it will be used.\n  const socket = useMemo(() => getSocket(token), [token]);\n\n  // load conversation messages once\n  useEffect(() => {\n    let mounted = true;\n    (async () => {\n      try {\n        const msgs = await api(`/conversations/${peer.id}/messages`, 'GET', undefined, token);\n        if (!mounted) return;\n        // normalize field names so items have id and createdAt\n        const norm = msgs.map(m => ({\n          id: m.id || m._id,\n          from: m.from,\n          to: m.to,\n          text: m.text,\n          createdAt: m.createdAt || m.created_at || m.created,\n          deliveredAt: m.deliveredAt,\n          readAt: m.readAt\n        }));\n        setMessages(norm);\n        // mark unread as read (emit read receipts for messages that were to me and not read)\n        const unreadIds = norm.filter(m => String(m.to) === String(user.id) && !m.readAt).map(m => m.id);\n        if (unreadIds.length) {\n          socket.emit('message:read', { messageIds: unreadIds, peerId: peer.id });\n        }\n      } catch (e) {\n        console.warn('Load messages failed', e.message || e);\n      }\n    })();\n    return () => { mounted = false; };\n  }, [peer.id, token]);\n\n  // socket event handlers\n  useEffect(() => {\n    if (!socket) return;\n    const onNew = (msg) => {\n      // msg might come as plain DB object or our payload; normalize\n      const m = {\n        id: msg.id || msg._id,\n        from: msg.from,\n        to: msg.to,\n        text: msg.text,\n        createdAt: msg.createdAt || msg.createdAt,\n        deliveredAt: msg.deliveredAt,\n        readAt: msg.readAt\n      };\n      // only include messages that belong to this conversation\n      if (String(m.from) === String(peer.id) || String(m.to) === String(peer.id)) {\n        setMessages(prev => [...prev, m]);\n        // if it's a message for me, immediately mark it read\n        if (String(m.to) === String(user.id)) {\n          socket.emit('message:read', { messageIds: [m.id], peerId: peer.id });\n        }\n      }\n    };\n\n    const onRead = ({ messageIds, peerId }) => {\n      // peerId in our server ack is the user who read them (or the peer) — normalize by checking membership\n      // only update UI when the ack concerns this peer conversation\n      if (String(peerId) !== String(peer.id) && String(peerId) !== String(user.id)) {\n        // if peerId is not our peer or us, ignore\n      }\n      setMessages(prev => prev.map(m => messageIds.includes(m.id) ? { ...m, readAt: new Date().toISOString() } : m));\n    };\n\n    const onTypingStart = ({ from }) => {\n      if (String(from) === String(peer.id)) setPeerTyping(true);\n    };\n    const onTypingStop = ({ from }) => {\n      if (String(from) === String(peer.id)) setPeerTyping(false);\n    };\n\n    socket.on('message:new', onNew);\n    socket.on('message:read', onRead);\n    socket.on('typing:start', onTypingStart);\n    socket.on('typing:stop', onTypingStop);\n\n    return () => {\n      socket.off('message:new', onNew);\n      socket.off('message:read', onRead);\n      socket.off('typing:start', onTypingStart);\n      socket.off('typing:stop', onTypingStop);\n    };\n  }, [socket, peer.id]);\n\n  // auto-scroll when messages update\n  useEffect(() => {\n    // wait a tick for list to render\n    const t = setTimeout(() => listRef.current?.scrollToEnd({ animated: true }), 80);\n    return () => clearTimeout(t);\n  }, [messages.length]);\n\n  // typing debounce: emit start once, and stop after idle time\n  useEffect(() => {\n    if (!socket) return;\n    if (text.length > 0) {\n      socket.emit('typing:start', { to: peer.id });\n      // stop typing after 1.2s of idle\n      const t = setTimeout(() => socket.emit('typing:stop', { to: peer.id }), 1200);\n      return () => clearTimeout(t);\n    } else {\n      // if text cleared, send stop\n      socket.emit('typing:stop', { to: peer.id });\n    }\n  }, [text]);\n\n  const send = () => {\n    if (!text.trim()) return;\n    const payload = { to: peer.id, text: text.trim(), clientId: Date.now().toString() };\n    socket.emit('message:send', payload);\n    // locally append a placeholder message — server will emit final message:new with id\n    const optimistic = {\n      id: `local-${Date.now()}`,\n      from: user.id,\n      to: peer.id,\n      text: text.trim(),\n      createdAt: new Date().toISOString(),\n      deliveredAt: null,\n      readAt: null\n    };\n    setMessages(prev => [...prev, optimistic]);\n    setText('');\n  };\n\n  return (\n    <KeyboardAvoidingView style={{ flex: 1 }} behavior={Platform.OS === 'ios' ? 'padding' : undefined}>\n      <View style={styles.header}>\n        <Text style={styles.headerText}>{peer.name}</Text>\n        {peerTyping ? <Text style={styles.typing}>typing…</Text> : null}\n      </View>\n\n      <FlatList\n        ref={listRef}\n        data={messages}\n        keyExtractor={(item) => String(item.id)}\n        renderItem={({ item }) => <MessageBubble msg={item} me={user} />}\n        contentContainerStyle={{ padding: 12 }}\n        onContentSizeChange={() => listRef.current?.scrollToEnd({ animated: true })}\n      />\n\n      <View style={styles.inputRow}>\n        <TextInput\n          placeholder=\"Type a message\"\n          value={text}\n          onChangeText={setText}\n          style={styles.input}\n          multiline={false}\n        />\n        <Button title=\"Send\" onPress={send} />\n      </View>\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  header: { padding: 12, borderBottomWidth: 1, borderColor: '#eee', alignItems: 'center' },\n  headerText: { fontWeight: '700', fontSize: 16 },\n  typing: { fontSize: 12, color: '#666', marginTop: 4 },\n  inputRow: { flexDirection: 'row', alignItems: 'center', padding: 8, borderTopWidth: 1, borderColor: '#eee' },\n  input: { flex: 1, borderWidth: 1, borderColor: '#ddd', borderRadius: 20, paddingHorizontal: 12, paddingVertical: 8, marginRight: 8 }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}